# Observer Rust Discord Bot ドキュメント

## はじめに
Observer Rust Discord Bot（observer-rust）は、Rustで実装された多機能なAIチャットボットです。OpenAIのGPTモデルをベースに、Discord上で自然な会話や高度なツール連携、Web検索を通じた詳細レポート生成など、さまざまな機能を提供します。

Repository: https://github.com/371tti/observer-rust

## 主な機能

1. **自然な会話**  
   - 絵文字やスラングを交えたカジュアルな対話が可能。  
   - ユーザーの入力に臨機応変に反応。

2. **ツール連携**  
   - Webスクレイピング（playwright／reqwest）の自動呼び出し  
   - メモリ管理（`memory_tool`）による会話履歴の保存・参照  
   - 現地時刻取得 (`get_location_time`)  
   - 画像キャプショニング (`image_captioner`)  

3. **ディープサーチ**  
   - Bing検索連携により、インターネット上の情報を深く探索  
   - 詳細レポート・要約の自動生成  

4. **プロンプトカスタマイズ**  
   - `config.json`でボット名、使用ツール、モデルエンドポイント、プロンプトなどを設定可能。  

## コマンド一覧

| コマンド                         | 説明                                       |
|----------------------------------|--------------------------------------------|
| `/ping`                          | ボットの応答確認                           |
| `/ask [質問内容]`                | ボットに質問                               |
| `/deep_search [クエリ]`          | インターネットで深く検索しレポート生成     |
| `/reset`                         | ボットのシステムプロンプトをリセット       |
| `/enable`                        | ボットを有効化                             |
| `/disable`                       | ボットを無効化                             |
| `/collect_history [エントリ数]`  | メッセージ履歴を指定数だけ収集           |

## インストールとセットアップ

1. **リポジトリをクローン**  
   ```bash
   git clone https://github.com/371tti/observer-rust.git
   cd observer-rust
   ```

2. **ビルド**  
   ```bash
   cargo build --release
   ```

3. **初回実行**  
   - 実行バイナリを起動すると、`config.json`が生成されます。  
   ```bash
   ./target/release/observer-rust
   ```

4. **Discord Bot Token取得**  
   - Discord Developer PortalでBotを作成し、トークンを取得。  

5. **`config.json`編集**  
   ```jsonc
   {
     "bot_token": "YOUR_DISCORD_BOT_TOKEN",
     "openai_api_key": "YOUR_OPENAI_API_KEY",
     "model_endpoint": "https://api.openai.com/v1/engines/gpt-4",
     "tools": {
       "enable_browser": true,
       "enable_memory": true
     },
     "system_prompt": "Observerとして振る舞う設定プロンプト"
   }
   ```

6. **再起動 & サーバー参加**  
   ```bash
   ./target/release/observer-rust
   ```  
   DiscordサーバーにBotを招待して動作確認。

## 設定項目

- `bot_token`: Discord Botのトークン。  
- `openai_api_key`: OpenAI APIキー。  
- `model_endpoint`: 使用するGPTモデルのエンドポイント。  
- `tools`: ツール連携の有効/無効設定。  
- `system_prompt`: Botの初期システムプロンプト。

## 動作イメージ

- ユーザーが`/ask 話題`と入力 → Botが補完した応答を返す。  
- `browser`ツールを用いてWebページ要約 → その情報をチャットに組み込む。  
- `memory_tool`で重要会話を保存 → 後で参照可能。

## ライセンス

MIT License → 詳細は [LICENSE](https://github.com/371tti/observer-rust/blob/main/LICENSE) を参照。

## 参考情報

- GitHub: https://github.com/371tti/observer-rust  
- OpenAI API: https://platform.openai.com/docs/api-reference

*この記事はobserver-rustの機能やセットアップ手順、設定方法をまとめた公式ドキュメントです。初めての方でも動かせるよう、具体的なコマンドやサンプル設定を網羅しています。*