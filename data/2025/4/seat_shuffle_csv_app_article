# CSV対応席替えアプリの作り方

このドキュメントでは、ブラウザ上で動作する1ファイル完結の「席替えアプリ（CSV対応版）」の実装手順を詳細に解説します。列数、行数を指定し、空席をセルクリックで登録。シャッフル結果を画面表示するほか、CSVファイルのダウンロード・読み込み表示も可能です。

## 機能概要

1. 列数・行数を自由指定
2. 名前を改行区切りで入力
3. セルをクリックして空席を設定
4. 「シャッフル＆表示」でランダム配置をカードめくりアニメーション付きで表示
5. 「CSVをダウンロード」で名簿番号,名前のCSV生成
6. 隠しボタンでCSV読み込み＆表示モードに切り替え

## 完成コード
以下のHTMLを1ファイルとして保存してください。JSはすべて埋め込みです。

```html
<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <title>席替えアプリ（CSV対応版）</title>
  <style>
    body { font-family: sans-serif; padding: 1rem; background: #f5f5f5; }
    input[type=number], textarea, button { font-size: 14px; margin: .5rem 0; }
    textarea { width: 100%; height: 80px; }
    #seatGrid, #resultGrid, #csvView { display: grid; gap: 4px; margin: .5rem 0; }
    .cell, .card {
      width: 60px; height: 40px; display: flex;
      align-items: center; justify-content: center;
      border: 1px solid #ccc; background: #fff;
      cursor: pointer; user-select: none;
    }
    .cell.empty { background: #eee; cursor: default; }
    .card { perspective: 600px; }
    .inner { width: 100%; height: 100%; position: relative;
      transform-style: preserve-3d; transition: transform .4s; }
    .inner.flipped { transform: rotateY(180deg); }
    .face {
      position: absolute; width: 100%; height: 100%;
      backface-visibility: hidden; display: flex;
      align-items: center; justify-content: center;
      font-size: 11px; text-align: center; padding: 2px; box-sizing: border-box;
    }
    .front { background: #88c; color: #fff; }
    .back  { background: #fff; transform: rotateY(180deg); }
    #toggleCsv { position: fixed; bottom: 5px; right: 5px; opacity: 0.1; }
    #toggleCsv:hover { opacity: 1; }
  </style>
</head>
<body>
  <h1>席替えアプリ（CSV対応版）</h1>

  <!-- 設定エリア -->
  <div>
    <label>列数:<input type="number" id="cols" value="5" min="1"></label>
    <label>行数:<input type="number" id="rows" value="4" min="1"></label>
    <button id="makeGrid">グリッド作成</button>
  </div>
  <div>
    <p>名前を改行区切りで入力</p>
    <textarea id="nameList" placeholder="田中 太郎&#10;山田 花子"></textarea>
  </div>
  <p>セルをクリック→空席指定</p>
  <div id="seatGrid"></div>

  <!-- シャッフル＆エクスポート -->
  <button id="shuffle">シャッフル＆表示</button>
  <button id="exportCsv">CSVをダウンロード</button>
  <div id="resultGrid"></div>

  <!-- CSV表示モード -->
  <div id="csvView" style="display:none;"></div>
  <button id="toggleCsv">CSV表示／非表示</button>

  <script>
    const seatGrid   = document.getElementById('seatGrid');
    const resultGrid = document.getElementById('resultGrid');
    const csvView    = document.getElementById('csvView');
    const toggleBtn  = document.getElementById('toggleCsv');
    let seats = [];

    // グリッド作成
    document.getElementById('makeGrid').addEventListener('click', () => {
      const cols = +document.getElementById('cols').value;
      const rows = +document.getElementById('rows').value;
      seats = Array(rows * cols).fill(0).map((_, i) => ({ idx: i, empty: false }));
      seatGrid.style.gridTemplateColumns = `repeat(${cols},60px)`;
      seatGrid.innerHTML = '';
      seats.forEach(s => {
        const d = document.createElement('div');
        d.className = 'cell'; d.textContent = s.idx + 1;
        d.addEventListener('click', () => {
          s.empty = !s.empty;
          d.classList.toggle('empty', s.empty);
          d.textContent = s.empty ? '' : s.idx + 1;
        });
        seatGrid.appendChild(d);
      });
      resultGrid.innerHTML = '';
      csvView.style.display = 'none';
    });

    // シャッフル＆結果表示
    document.getElementById('shuffle').addEventListener('click', () => {
      const names = document.getElementById('nameList').value
        .split('\n').map(s=>s.trim()).filter(s=>s);
      const valid = seats.filter(s=>!s.empty);
      if (names.length !== valid.length) {
        alert('名前数と有効席数が不一致');
        return;
      }
      for (let i=names.length-1;i>0;i--) {
        const j=Math.floor(Math.random()*(i+1));
        [names[i],names[j]]=[names[j],names[i]];
      }
      const assignments = seats.map(s => s.empty ? null : `${s.idx+1},${names.shift()}`);
      const cols = +document.getElementById('cols').value;
      resultGrid.style.gridTemplateColumns = `repeat(${cols},60px)`;
      resultGrid.innerHTML = '';
      seats.forEach((_,i) => {
        const card = document.createElement('div'); card.className='card';
        const inner = document.createElement('div'); inner.className='inner';
        const front = document.createElement('div'); front.className='face front';
        const back  = document.createElement('div'); back.className='face back';
        back.textContent = assignments[i]||'';
        inner.append(front,back); card.append(inner); resultGrid.append(card);
      });
      Array.from(resultGrid.children)
        .sort(()=>Math.random()-.5)
        .forEach((c,i)=>setTimeout(()=>c.firstChild.classList.add('flipped'),i*300));
    });

    // CSV出力
    document.getElementById('exportCsv').addEventListener('click', () => {
      const rows = seats.map((s,i) => s.empty ? '' : `${s.idx+1},${
        document.getElementById('nameList').value.split('\n')
          .map(t=>t.trim()).filter(t=>t)[i]}`
      );
      const blob = new Blob([rows.filter(r=>r).join('\n')], { type:'text/csv' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a'); a.href=url; a.download='seating.csv'; a.click();
      URL.revokeObjectURL(url);
    });

    // CSV表示切替
    toggleBtn.addEventListener('click', () => {
      if (csvView.style.display==='none') {
        const fileInput = document.createElement('input');
        fileInput.type='file'; fileInput.accept='.csv';
        fileInput.onchange=e=>{
          const f=e.target.files[0]; if(!f) return;
          const reader=new FileReader();
          reader.onload=ev=>{
            csvView.innerHTML='';
            ev.target.result.split('\n').forEach(l=>{
              const row=document.createElement('div'); row.textContent=l;
              csvView.append(row);
            });
            csvView.style.display='block';
          };
          reader.readAsText(f);
        };
        fileInput.click();
      } else {
        csvView.style.display='none';
      }
    });
  </script>
</body>
</html>
```

## 解説ポイント

- **グリッド生成**：`cols×rows`のセルを`seats`配列で管理
- **空席指定**：クリックで`empty`フラグON/OFF
- **シャッフル**：Fisher–Yatesアルゴリズム
- **カード表示**：CSSで3D回転アニメーション
- **CSVダウンロード**：Blob＋`URL.createObjectURL`による生成
- **CSV表示モード**：隠しボタンでファイル選択→`FileReader`で読み込み

これで、CSV出力・読み込みを備えた高機能席替えアプリが完成です。クラス運営やイベントなどで活用してください。