タイトル: ドラッグ＆ドロップで解く！年表並べ替えクイズWebアプリの作り方

はじめに
日々の学習や遊びとして活用できる年表並べ替えクイズを、シンプルなWebアプリとして実装する方法を紹介します。基本のHTML/CSS/JavaScriptに加え、Sortable.jsを使ったドラッグ＆ドロップ機能を備えたサンプルコードを示します。

1. 技術スタックと準備
- HTML5/CSS3: レイアウトとスタイリング
- JavaScript: クイズロジック
- Sortable.js: ドラッグ＆ドロップライブラリ
- Bootstrap 5: 手軽なUIデザイン

2. データ構造
問題データはJSON形式で保持します。IDで正答順序を管理し、テキストを表示します。

```json
[
  {"id":1,"text":"Bさんが2018年にYをした"},
  {"id":2,"text":"Aさんが2020年にXをした"},
  {"id":3,"text":"Cさんが2019年にZをした"}
]
```

3. サンプル構成
HTMLファイル1つで完結するミニマル例です。

```html
<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>年表並べ替えクイズ</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="p-4">
  <h4>年表並べ替えクイズ</h4>
  <ul id="quizList" class="list-group mb-3"></ul>
  <button id="checkBtn" class="btn btn-primary">解答</button>
  <div id="result" class="mt-2"></div>

  <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.14.0/Sortable.min.js"></script>
  <script>
    // 問題データ
    const data = [
      {id:1, text:"Bさんが2018年にYをした"},
      {id:2, text:"Aさんが2020年にXをした"},
      {id:3, text:"Cさんが2019年にZをした"}
    ];
    // 正解順: 古い→新しい（IDで管理）
    const answer = [1, 3, 2];

    const listEl = document.getElementById('quizList');
    // 問題をシャッフルして表示
    data.sort(() => Math.random() - 0.5).forEach(item => {
      const li = document.createElement('li');
      li.className = 'list-group-item';
      li.dataset.id = item.id;
      li.textContent = item.text;
      listEl.appendChild(li);
    });

    // ドラッグ＆ドロップ有効化
    Sortable.create(listEl, { animation: 150 });

    // 解答判定
    document.getElementById('checkBtn').onclick = () => {
      const current = Array.from(listEl.children).map(li => +li.dataset.id);
      const ok = current.every((v, i) => v === answer[i]);
      document.getElementById('result').textContent = ok ? '✅ 正解！' : '❌ 不正解…';
    };
  </script>
</body>
</html>
```

4. 拡張アイデア
- 問題追加・管理画面: 複数セットの問題を動的に切り替え
- 難易度選択: 出題数や要素数を調整
- スコア統計: 正答率やタイムアタック機能
- リザルト画面: 解説表示やソーシャルシェア

おわりに
Sortable.jsを活用すると、少ないコードでスムーズなドラッグ＆ドロップを実現できます。本記事のサンプルをベースに、教養コンテンツや学習アプリなど、多彩な応用にチャレンジしてみてください。

参考情報
- Sortable.js 公式リポジトリ: https://github.com/SortableJS/Sortable
- Bootstrap 5 ドキュメント: https://getbootstrap.com/docs/5.0/getting-started/introduction/